files {
  graph = straight-corridor/graph.json
  walls = straight-corridor/walls.json
  flows = straight-corridor/ped-flow-sin.json
  zones_to_vertices_map = null
  timetable = null
  disaggregate_demand = null
  flows_TF = null
  timetable_TF = null
}
sim {
  start_time = 0
  end_time = 400
  sf_dt = 0.1
  route_dt = 2.0,
  evaluate_dt = 1.0
  rebuild_tree_dt = 2
  nb_runs = 0
  use_aggregate_demand = yes
  use_flow_gates = no
  use_amw = no
  use_binary_gates = no
  use_flow_sep = yes
  fixed_flow_sep = no
  measure_density = no
  use_alternate_graphs = yes
}
output {
  dir = /home/nicholas/PhD/code/hub-simulator/results-to-keep/compliance-to-flow-separators/compliance-analysis/
  log_dir = /home/nicholas/PhD/code/hub-simulator/logs/
  output_prefix = flow-sep-compliance
  make_video = no
  video_dt = 0.1
  bckg_image_video = null
  bckg_image_width = 90.75
  bckg_image_height = 24.75
  write_trajectories_as_VS = no
  write_trajectories_as_JSON = no
}
execution {
  parallel = yes
  threads = 3
}