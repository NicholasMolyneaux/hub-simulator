files {
  graph = den-haag/graph-test.json
  walls = den-haag/walls-test.json
  zones_to_vertices_map = den-haag/BM_to_hub_mapping.json
  timetable = null
  flows = null
  disaggregate_demand = null
  flows_TF = den-haag/BMinput/flows.json
  timetable_TF = den-haag/BMinput/timetable.json
  TF_demand_sets = den-haag/BMinput/
}
sim {
  start_time = 3400
  end_time = 3700
  sf_dt = 0.1
  route_dt = 1200.0,
  evaluate_dt = 2.0
  rebuild_tree_dt = 5.0
  read_multiple_TF_demand_sets = yes
  read_multiple_demand_sets = no
  nb_runs = 1
  use_disaggregate_demand = yes
  increase_disaggregate_demand = null
  use_flows = no
  use_flow_gates = no
  use_amw = no
  use_binary_gates = no
  use_flow_sep = no
  fixed_flow_sep = no
  measure_density = no
  use_alternate_graphs = no
}
output {
  dir = tmp/
  log_dir = logs/
  output_prefix = den-haag-integration-low-demand
  make_video = no
  video_dt = 1.0
  bckg_image_video = null
  bckg_image_width = 90.75
  bckg_image_height = 24.75
  write_densities = no
  write_travel_times = no
  write_tt_stats = no
  write_density_stats = no
  write_inflow = no
  write_trajectories_as_VS = no
  write_trajectories_as_JSON = no
  analyze_od_groups = no
  write_tt_4_transform = yes
  write_tt_4_transform_file_name = walking-times.json
  write_tt_4_transform_quantile_interval = 1.0
  travel-time {
    disaggregate = yes
    per-simulation-distributions = no
    per-simulation-median = no
    per-simulation-median-by-OD = no
    through-monitored-zones-by-OD = no
    per-demand-set-median-distribution = no
  }
}
execution {
  parallel = no
  threads = 3
}
